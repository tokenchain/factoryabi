    def get_{{languageSpecificName}}_event(self, callback_event=None, forceStart: any = False) -> AttributeDict:
        """Get log entry for {{name}} event.

{{makeEventParameterDocstringRole name 8}}
        """


        since = 0
        if isinstance(forceStart, bool):
            if forceStart is False:
                since = self.event_track_time
            else:
                since = 0
        elif isinstance(forceStart, int):
            since = forceStart

        if self.call_contract_debug_flag:
            print("{{languageSpecificName}} check since {}".format(since))

        event_result = self._tron_trx.tron.get_event_result(
            event_name="{{name}}",
            since_timestamp=since,
            contract_address=self.contract_address,
            only_confirmed=False,
        )

        self.event_track_time = int(datetime.now().timestamp()) * 1000

        if self.call_contract_debug_flag:
            print(event_result)

        if len(event_result) > 0:
            for c in event_result:
                if "transaction_id" in c and "result" in c and callback_event!=None:
                    callback_event({{#each inputs}}c["result"]["{{this.name}}"],{{/each}}c["block_number"],c["block_timestamp"])

        return event_result
